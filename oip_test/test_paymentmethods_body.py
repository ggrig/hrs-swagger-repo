# coding: utf-8

"""
    OIP API

    No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)  # noqa: E501

    OpenAPI spec version: 1.0.0
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""

from __future__ import absolute_import

import unittest

import oip_client
from oip_client.models.paymentmethods_body import PaymentmethodsBody  # noqa: E501
from oip_client.rest import ApiException
from pprint import pprint

class TestPaymentmethodsBody(unittest.TestCase):
    """PaymentmethodsBody unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def testPaymentmethodsBody(self):
        print("""Test PaymentmethodsBody""")
        # FIXME: construct object with mandatory attributes with example values
        # model = swagger_client.models.paymentmethods_body.PaymentmethodsBody()  # noqa: E501

        # Configure OAuth2 access token for authorization: oauth2
        configuration = oip_client.Configuration()

        # create an instance of the API class
        api_instance = oip_client.DefaultApi(oip_client.ApiClient(configuration))
        body = oip_client.PaymentmethodsBody(
            code = 'str',
            description = 'str',
            bal_account_type = 'str',
            bal_account_no = 'str',
            surcharge_variable = 'str',
            surcharge_fix = 'str',
            cutoff_amount_variable = 'str',
            fee_account = 'str',
            pay_view_code = 'str',
            cutoff_amount_fee = 'str',
            default_payment_type_code = 'str',
            single_payment = 'str',
            default_pmt_bank_account_no = 'str',
            separate_pmt_proposal_head = 'str',
            vendor_purpose_text = 'str',
            customer_purpose_text = 'str',
            payment_note_purpose_text = 'str',
            vendor_purpose_text_header = 'str',
            purpose_text_footer = 'str',
            limit_payment_amount_lcy = 'str',
            customer_purpose_text_header = 'str',
            limit_lines_per_head = 'str',
            min_pos_payment_note = 'str',
            limit_lines_per_head_x = 'str',
            min_pos_payment_note_x = 'str',
            tenant = 'str'            
        ) # PaymentmethodsBody | 

        try:
            # Create Booking Source
            api_response = api_instance.payment_methods_post(body)
            # pprint(api_response)
        except ApiException as e:
            print("Exception when calling DefaultApi->payment_methods_post: %s\n" % e)

if __name__ == '__main__':
    unittest.main()
