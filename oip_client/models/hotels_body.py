# coding: utf-8

"""
    OIP API

    No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)  # noqa: E501

    OpenAPI spec version: 1.0.0
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""

import pprint
import re  # noqa: F401

import six

class HotelsBody(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'vat_registration_number': 'str',
        'no_corrections': 'str',
        'invoice_address_no': 'str',
        'hotel_address_no': 'str',
        'company_no': 'str',
        'invoice_address_name': 'str',
        'invoice_address_name2': 'str',
        'invoice_address_line1': 'str',
        'invoice_address_line2': 'str',
        'primary_contact_no': 'str',
        'brand_no': 'str',
        'brand_name': 'str',
        'invoice_address_city': 'str',
        'contract_status': 'str',
        'contract_status_name': 'str',
        'chain_no': 'str',
        'chain_name': 'str',
        'invoice_address_country_region_code': 'str',
        'hotel_status': 'str',
        'invoice_address_email': 'str',
        'invoice_address_email_copy': 'str',
        'invoice_address_fax_no': 'str',
        'invoice_address_fax_no_copy': 'str',
        'invoice_address_language_code': 'str',
        'reason_code': 'str',
        'no_sepa_core': 'str',
        'reason_name': 'str',
        'reason_date': 'str',
        'phone_no': 'str',
        'hrs_contact': 'str',
        'invoioce_address_zip': 'str',
        'ccpkn': 'str',
        'cc_name': 'str',
        'cc_valid_to': 'str',
        'contact_person_first_name': 'str',
        'contact_person_middle_name': 'str',
        'contact_person_last_name': 'str',
        'contact_person_email': 'str',
        'contact_person_phone': 'str',
        'contact_person_fax': 'str',
        'hotel_address_name': 'str',
        'hotel_address_country_region_code': 'str',
        'hotel_address_language_code': 'str',
        'hotel_address_name2': 'str',
        'hotel_address_line1': 'str',
        'hotel_address_line2': 'str',
        'hotel_address_city': 'str',
        'hotel_address_zip': 'str',
        'hotel_address_phone_no': 'str',
        'hotel_address_fax_no': 'str',
        'hotel_address_email': 'str',
        'web_portal_enabled': 'bool',
        'correspondence_type': 'str',
        'accounting_contact': 'str',
        'deduction_type': 'str',
        'tenant': 'str'
    }

    attribute_map = {
        'vat_registration_number': 'VATRegistrationNumber',
        'no_corrections': 'NoCorrections',
        'invoice_address_no': 'InvoiceAddressNo',
        'hotel_address_no': 'HotelAddressNo',
        'company_no': 'CompanyNo',
        'invoice_address_name': 'InvoiceAddressName',
        'invoice_address_name2': 'InvoiceAddressName2',
        'invoice_address_line1': 'InvoiceAddressLine1',
        'invoice_address_line2': 'InvoiceAddressLine2',
        'primary_contact_no': 'PrimaryContactNo',
        'brand_no': 'BrandNo',
        'brand_name': 'BrandName',
        'invoice_address_city': 'InvoiceAddressCity',
        'contract_status': 'ContractStatus',
        'contract_status_name': 'ContractStatusName',
        'chain_no': 'ChainNo',
        'chain_name': 'ChainName',
        'invoice_address_country_region_code': 'InvoiceAddressCountryRegionCode',
        'hotel_status': 'HotelStatus',
        'invoice_address_email': 'InvoiceAddressEmail',
        'invoice_address_email_copy': 'InvoiceAddressEmailCopy',
        'invoice_address_fax_no': 'InvoiceAddressFaxNo',
        'invoice_address_fax_no_copy': 'InvoiceAddressFaxNoCopy',
        'invoice_address_language_code': 'InvoiceAddressLanguageCode',
        'reason_code': 'ReasonCode',
        'no_sepa_core': 'NoSepaCore',
        'reason_name': 'ReasonName',
        'reason_date': 'ReasonDate',
        'phone_no': 'PhoneNo',
        'hrs_contact': 'HRSContact',
        'invoioce_address_zip': 'InvoioceAddressZip',
        'ccpkn': 'CCPKN',
        'cc_name': 'CCName',
        'cc_valid_to': 'CCValidTo',
        'contact_person_first_name': 'ContactPersonFirstName',
        'contact_person_middle_name': 'ContactPersonMiddleName',
        'contact_person_last_name': 'ContactPersonLastName',
        'contact_person_email': 'ContactPersonEmail',
        'contact_person_phone': 'ContactPersonPhone',
        'contact_person_fax': 'ContactPersonFax',
        'hotel_address_name': 'HotelAddressName',
        'hotel_address_country_region_code': 'HotelAddressCountryRegionCode',
        'hotel_address_language_code': 'HotelAddressLanguageCode',
        'hotel_address_name2': 'HotelAddressName2',
        'hotel_address_line1': 'HotelAddressLine1',
        'hotel_address_line2': 'HotelAddressLine2',
        'hotel_address_city': 'HotelAddressCity',
        'hotel_address_zip': 'HotelAddressZip',
        'hotel_address_phone_no': 'HotelAddressPhoneNo',
        'hotel_address_fax_no': 'HotelAddressFaxNo',
        'hotel_address_email': 'HotelAddressEmail',
        'web_portal_enabled': 'WebPortalEnabled',
        'correspondence_type': 'CorrespondenceType',
        'accounting_contact': 'AccountingContact',
        'deduction_type': 'DeductionType',
        'tenant': 'Tenant'
    }

    def __init__(self, vat_registration_number=None, no_corrections=None, invoice_address_no=None, hotel_address_no=None, company_no=None, invoice_address_name=None, invoice_address_name2=None, invoice_address_line1=None, invoice_address_line2=None, primary_contact_no=None, brand_no=None, brand_name=None, invoice_address_city=None, contract_status=None, contract_status_name=None, chain_no=None, chain_name=None, invoice_address_country_region_code=None, hotel_status=None, invoice_address_email=None, invoice_address_email_copy=None, invoice_address_fax_no=None, invoice_address_fax_no_copy=None, invoice_address_language_code=None, reason_code=None, no_sepa_core=None, reason_name=None, reason_date=None, phone_no=None, hrs_contact=None, invoioce_address_zip=None, ccpkn=None, cc_name=None, cc_valid_to=None, contact_person_first_name=None, contact_person_middle_name=None, contact_person_last_name=None, contact_person_email=None, contact_person_phone=None, contact_person_fax=None, hotel_address_name=None, hotel_address_country_region_code=None, hotel_address_language_code=None, hotel_address_name2=None, hotel_address_line1=None, hotel_address_line2=None, hotel_address_city=None, hotel_address_zip=None, hotel_address_phone_no=None, hotel_address_fax_no=None, hotel_address_email=None, web_portal_enabled=None, correspondence_type=None, accounting_contact=None, deduction_type=None, tenant=None):  # noqa: E501
        """HotelsBody - a model defined in Swagger"""  # noqa: E501
        self._vat_registration_number = None
        self._no_corrections = None
        self._invoice_address_no = None
        self._hotel_address_no = None
        self._company_no = None
        self._invoice_address_name = None
        self._invoice_address_name2 = None
        self._invoice_address_line1 = None
        self._invoice_address_line2 = None
        self._primary_contact_no = None
        self._brand_no = None
        self._brand_name = None
        self._invoice_address_city = None
        self._contract_status = None
        self._contract_status_name = None
        self._chain_no = None
        self._chain_name = None
        self._invoice_address_country_region_code = None
        self._hotel_status = None
        self._invoice_address_email = None
        self._invoice_address_email_copy = None
        self._invoice_address_fax_no = None
        self._invoice_address_fax_no_copy = None
        self._invoice_address_language_code = None
        self._reason_code = None
        self._no_sepa_core = None
        self._reason_name = None
        self._reason_date = None
        self._phone_no = None
        self._hrs_contact = None
        self._invoioce_address_zip = None
        self._ccpkn = None
        self._cc_name = None
        self._cc_valid_to = None
        self._contact_person_first_name = None
        self._contact_person_middle_name = None
        self._contact_person_last_name = None
        self._contact_person_email = None
        self._contact_person_phone = None
        self._contact_person_fax = None
        self._hotel_address_name = None
        self._hotel_address_country_region_code = None
        self._hotel_address_language_code = None
        self._hotel_address_name2 = None
        self._hotel_address_line1 = None
        self._hotel_address_line2 = None
        self._hotel_address_city = None
        self._hotel_address_zip = None
        self._hotel_address_phone_no = None
        self._hotel_address_fax_no = None
        self._hotel_address_email = None
        self._web_portal_enabled = None
        self._correspondence_type = None
        self._accounting_contact = None
        self._deduction_type = None
        self._tenant = None
        self.discriminator = None
        if vat_registration_number is not None:
            self.vat_registration_number = vat_registration_number
        if no_corrections is not None:
            self.no_corrections = no_corrections
        if invoice_address_no is not None:
            self.invoice_address_no = invoice_address_no
        if hotel_address_no is not None:
            self.hotel_address_no = hotel_address_no
        if company_no is not None:
            self.company_no = company_no
        if invoice_address_name is not None:
            self.invoice_address_name = invoice_address_name
        if invoice_address_name2 is not None:
            self.invoice_address_name2 = invoice_address_name2
        if invoice_address_line1 is not None:
            self.invoice_address_line1 = invoice_address_line1
        if invoice_address_line2 is not None:
            self.invoice_address_line2 = invoice_address_line2
        if primary_contact_no is not None:
            self.primary_contact_no = primary_contact_no
        if brand_no is not None:
            self.brand_no = brand_no
        if brand_name is not None:
            self.brand_name = brand_name
        if invoice_address_city is not None:
            self.invoice_address_city = invoice_address_city
        if contract_status is not None:
            self.contract_status = contract_status
        if contract_status_name is not None:
            self.contract_status_name = contract_status_name
        if chain_no is not None:
            self.chain_no = chain_no
        if chain_name is not None:
            self.chain_name = chain_name
        if invoice_address_country_region_code is not None:
            self.invoice_address_country_region_code = invoice_address_country_region_code
        if hotel_status is not None:
            self.hotel_status = hotel_status
        if invoice_address_email is not None:
            self.invoice_address_email = invoice_address_email
        if invoice_address_email_copy is not None:
            self.invoice_address_email_copy = invoice_address_email_copy
        if invoice_address_fax_no is not None:
            self.invoice_address_fax_no = invoice_address_fax_no
        if invoice_address_fax_no_copy is not None:
            self.invoice_address_fax_no_copy = invoice_address_fax_no_copy
        if invoice_address_language_code is not None:
            self.invoice_address_language_code = invoice_address_language_code
        if reason_code is not None:
            self.reason_code = reason_code
        if no_sepa_core is not None:
            self.no_sepa_core = no_sepa_core
        if reason_name is not None:
            self.reason_name = reason_name
        if reason_date is not None:
            self.reason_date = reason_date
        if phone_no is not None:
            self.phone_no = phone_no
        if hrs_contact is not None:
            self.hrs_contact = hrs_contact
        if invoioce_address_zip is not None:
            self.invoioce_address_zip = invoioce_address_zip
        if ccpkn is not None:
            self.ccpkn = ccpkn
        if cc_name is not None:
            self.cc_name = cc_name
        if cc_valid_to is not None:
            self.cc_valid_to = cc_valid_to
        if contact_person_first_name is not None:
            self.contact_person_first_name = contact_person_first_name
        if contact_person_middle_name is not None:
            self.contact_person_middle_name = contact_person_middle_name
        if contact_person_last_name is not None:
            self.contact_person_last_name = contact_person_last_name
        if contact_person_email is not None:
            self.contact_person_email = contact_person_email
        if contact_person_phone is not None:
            self.contact_person_phone = contact_person_phone
        if contact_person_fax is not None:
            self.contact_person_fax = contact_person_fax
        if hotel_address_name is not None:
            self.hotel_address_name = hotel_address_name
        if hotel_address_country_region_code is not None:
            self.hotel_address_country_region_code = hotel_address_country_region_code
        if hotel_address_language_code is not None:
            self.hotel_address_language_code = hotel_address_language_code
        if hotel_address_name2 is not None:
            self.hotel_address_name2 = hotel_address_name2
        if hotel_address_line1 is not None:
            self.hotel_address_line1 = hotel_address_line1
        if hotel_address_line2 is not None:
            self.hotel_address_line2 = hotel_address_line2
        if hotel_address_city is not None:
            self.hotel_address_city = hotel_address_city
        if hotel_address_zip is not None:
            self.hotel_address_zip = hotel_address_zip
        if hotel_address_phone_no is not None:
            self.hotel_address_phone_no = hotel_address_phone_no
        if hotel_address_fax_no is not None:
            self.hotel_address_fax_no = hotel_address_fax_no
        if hotel_address_email is not None:
            self.hotel_address_email = hotel_address_email
        if web_portal_enabled is not None:
            self.web_portal_enabled = web_portal_enabled
        if correspondence_type is not None:
            self.correspondence_type = correspondence_type
        if accounting_contact is not None:
            self.accounting_contact = accounting_contact
        if deduction_type is not None:
            self.deduction_type = deduction_type
        if tenant is not None:
            self.tenant = tenant

    @property
    def vat_registration_number(self):
        """Gets the vat_registration_number of this HotelsBody.  # noqa: E501

        The VAT registration number of the hotel  # noqa: E501

        :return: The vat_registration_number of this HotelsBody.  # noqa: E501
        :rtype: str
        """
        return self._vat_registration_number

    @vat_registration_number.setter
    def vat_registration_number(self, vat_registration_number):
        """Sets the vat_registration_number of this HotelsBody.

        The VAT registration number of the hotel  # noqa: E501

        :param vat_registration_number: The vat_registration_number of this HotelsBody.  # noqa: E501
        :type: str
        """

        self._vat_registration_number = vat_registration_number

    @property
    def no_corrections(self):
        """Gets the no_corrections of this HotelsBody.  # noqa: E501

        Indicates if there are no corrections  # noqa: E501

        :return: The no_corrections of this HotelsBody.  # noqa: E501
        :rtype: str
        """
        return self._no_corrections

    @no_corrections.setter
    def no_corrections(self, no_corrections):
        """Sets the no_corrections of this HotelsBody.

        Indicates if there are no corrections  # noqa: E501

        :param no_corrections: The no_corrections of this HotelsBody.  # noqa: E501
        :type: str
        """

        self._no_corrections = no_corrections

    @property
    def invoice_address_no(self):
        """Gets the invoice_address_no of this HotelsBody.  # noqa: E501

        The invoice address number  # noqa: E501

        :return: The invoice_address_no of this HotelsBody.  # noqa: E501
        :rtype: str
        """
        return self._invoice_address_no

    @invoice_address_no.setter
    def invoice_address_no(self, invoice_address_no):
        """Sets the invoice_address_no of this HotelsBody.

        The invoice address number  # noqa: E501

        :param invoice_address_no: The invoice_address_no of this HotelsBody.  # noqa: E501
        :type: str
        """

        self._invoice_address_no = invoice_address_no

    @property
    def hotel_address_no(self):
        """Gets the hotel_address_no of this HotelsBody.  # noqa: E501

        The hotel address number  # noqa: E501

        :return: The hotel_address_no of this HotelsBody.  # noqa: E501
        :rtype: str
        """
        return self._hotel_address_no

    @hotel_address_no.setter
    def hotel_address_no(self, hotel_address_no):
        """Sets the hotel_address_no of this HotelsBody.

        The hotel address number  # noqa: E501

        :param hotel_address_no: The hotel_address_no of this HotelsBody.  # noqa: E501
        :type: str
        """

        self._hotel_address_no = hotel_address_no

    @property
    def company_no(self):
        """Gets the company_no of this HotelsBody.  # noqa: E501

        The company number of the hotel  # noqa: E501

        :return: The company_no of this HotelsBody.  # noqa: E501
        :rtype: str
        """
        return self._company_no

    @company_no.setter
    def company_no(self, company_no):
        """Sets the company_no of this HotelsBody.

        The company number of the hotel  # noqa: E501

        :param company_no: The company_no of this HotelsBody.  # noqa: E501
        :type: str
        """

        self._company_no = company_no

    @property
    def invoice_address_name(self):
        """Gets the invoice_address_name of this HotelsBody.  # noqa: E501

        The name of the invoice address  # noqa: E501

        :return: The invoice_address_name of this HotelsBody.  # noqa: E501
        :rtype: str
        """
        return self._invoice_address_name

    @invoice_address_name.setter
    def invoice_address_name(self, invoice_address_name):
        """Sets the invoice_address_name of this HotelsBody.

        The name of the invoice address  # noqa: E501

        :param invoice_address_name: The invoice_address_name of this HotelsBody.  # noqa: E501
        :type: str
        """

        self._invoice_address_name = invoice_address_name

    @property
    def invoice_address_name2(self):
        """Gets the invoice_address_name2 of this HotelsBody.  # noqa: E501

        The second line of the invoice address name  # noqa: E501

        :return: The invoice_address_name2 of this HotelsBody.  # noqa: E501
        :rtype: str
        """
        return self._invoice_address_name2

    @invoice_address_name2.setter
    def invoice_address_name2(self, invoice_address_name2):
        """Sets the invoice_address_name2 of this HotelsBody.

        The second line of the invoice address name  # noqa: E501

        :param invoice_address_name2: The invoice_address_name2 of this HotelsBody.  # noqa: E501
        :type: str
        """

        self._invoice_address_name2 = invoice_address_name2

    @property
    def invoice_address_line1(self):
        """Gets the invoice_address_line1 of this HotelsBody.  # noqa: E501

        The first line of the invoice address  # noqa: E501

        :return: The invoice_address_line1 of this HotelsBody.  # noqa: E501
        :rtype: str
        """
        return self._invoice_address_line1

    @invoice_address_line1.setter
    def invoice_address_line1(self, invoice_address_line1):
        """Sets the invoice_address_line1 of this HotelsBody.

        The first line of the invoice address  # noqa: E501

        :param invoice_address_line1: The invoice_address_line1 of this HotelsBody.  # noqa: E501
        :type: str
        """

        self._invoice_address_line1 = invoice_address_line1

    @property
    def invoice_address_line2(self):
        """Gets the invoice_address_line2 of this HotelsBody.  # noqa: E501

        The second line of the invoice address  # noqa: E501

        :return: The invoice_address_line2 of this HotelsBody.  # noqa: E501
        :rtype: str
        """
        return self._invoice_address_line2

    @invoice_address_line2.setter
    def invoice_address_line2(self, invoice_address_line2):
        """Sets the invoice_address_line2 of this HotelsBody.

        The second line of the invoice address  # noqa: E501

        :param invoice_address_line2: The invoice_address_line2 of this HotelsBody.  # noqa: E501
        :type: str
        """

        self._invoice_address_line2 = invoice_address_line2

    @property
    def primary_contact_no(self):
        """Gets the primary_contact_no of this HotelsBody.  # noqa: E501

        The primary contact number  # noqa: E501

        :return: The primary_contact_no of this HotelsBody.  # noqa: E501
        :rtype: str
        """
        return self._primary_contact_no

    @primary_contact_no.setter
    def primary_contact_no(self, primary_contact_no):
        """Sets the primary_contact_no of this HotelsBody.

        The primary contact number  # noqa: E501

        :param primary_contact_no: The primary_contact_no of this HotelsBody.  # noqa: E501
        :type: str
        """

        self._primary_contact_no = primary_contact_no

    @property
    def brand_no(self):
        """Gets the brand_no of this HotelsBody.  # noqa: E501

        The brand number  # noqa: E501

        :return: The brand_no of this HotelsBody.  # noqa: E501
        :rtype: str
        """
        return self._brand_no

    @brand_no.setter
    def brand_no(self, brand_no):
        """Sets the brand_no of this HotelsBody.

        The brand number  # noqa: E501

        :param brand_no: The brand_no of this HotelsBody.  # noqa: E501
        :type: str
        """

        self._brand_no = brand_no

    @property
    def brand_name(self):
        """Gets the brand_name of this HotelsBody.  # noqa: E501

        The brand name  # noqa: E501

        :return: The brand_name of this HotelsBody.  # noqa: E501
        :rtype: str
        """
        return self._brand_name

    @brand_name.setter
    def brand_name(self, brand_name):
        """Sets the brand_name of this HotelsBody.

        The brand name  # noqa: E501

        :param brand_name: The brand_name of this HotelsBody.  # noqa: E501
        :type: str
        """

        self._brand_name = brand_name

    @property
    def invoice_address_city(self):
        """Gets the invoice_address_city of this HotelsBody.  # noqa: E501

        The city of the invoice address  # noqa: E501

        :return: The invoice_address_city of this HotelsBody.  # noqa: E501
        :rtype: str
        """
        return self._invoice_address_city

    @invoice_address_city.setter
    def invoice_address_city(self, invoice_address_city):
        """Sets the invoice_address_city of this HotelsBody.

        The city of the invoice address  # noqa: E501

        :param invoice_address_city: The invoice_address_city of this HotelsBody.  # noqa: E501
        :type: str
        """

        self._invoice_address_city = invoice_address_city

    @property
    def contract_status(self):
        """Gets the contract_status of this HotelsBody.  # noqa: E501

        The contract status  # noqa: E501

        :return: The contract_status of this HotelsBody.  # noqa: E501
        :rtype: str
        """
        return self._contract_status

    @contract_status.setter
    def contract_status(self, contract_status):
        """Sets the contract_status of this HotelsBody.

        The contract status  # noqa: E501

        :param contract_status: The contract_status of this HotelsBody.  # noqa: E501
        :type: str
        """

        self._contract_status = contract_status

    @property
    def contract_status_name(self):
        """Gets the contract_status_name of this HotelsBody.  # noqa: E501

        The name of the contract status  # noqa: E501

        :return: The contract_status_name of this HotelsBody.  # noqa: E501
        :rtype: str
        """
        return self._contract_status_name

    @contract_status_name.setter
    def contract_status_name(self, contract_status_name):
        """Sets the contract_status_name of this HotelsBody.

        The name of the contract status  # noqa: E501

        :param contract_status_name: The contract_status_name of this HotelsBody.  # noqa: E501
        :type: str
        """

        self._contract_status_name = contract_status_name

    @property
    def chain_no(self):
        """Gets the chain_no of this HotelsBody.  # noqa: E501

        The chain number  # noqa: E501

        :return: The chain_no of this HotelsBody.  # noqa: E501
        :rtype: str
        """
        return self._chain_no

    @chain_no.setter
    def chain_no(self, chain_no):
        """Sets the chain_no of this HotelsBody.

        The chain number  # noqa: E501

        :param chain_no: The chain_no of this HotelsBody.  # noqa: E501
        :type: str
        """

        self._chain_no = chain_no

    @property
    def chain_name(self):
        """Gets the chain_name of this HotelsBody.  # noqa: E501

        The name of the chain  # noqa: E501

        :return: The chain_name of this HotelsBody.  # noqa: E501
        :rtype: str
        """
        return self._chain_name

    @chain_name.setter
    def chain_name(self, chain_name):
        """Sets the chain_name of this HotelsBody.

        The name of the chain  # noqa: E501

        :param chain_name: The chain_name of this HotelsBody.  # noqa: E501
        :type: str
        """

        self._chain_name = chain_name

    @property
    def invoice_address_country_region_code(self):
        """Gets the invoice_address_country_region_code of this HotelsBody.  # noqa: E501

        The country/region code of the invoice address  # noqa: E501

        :return: The invoice_address_country_region_code of this HotelsBody.  # noqa: E501
        :rtype: str
        """
        return self._invoice_address_country_region_code

    @invoice_address_country_region_code.setter
    def invoice_address_country_region_code(self, invoice_address_country_region_code):
        """Sets the invoice_address_country_region_code of this HotelsBody.

        The country/region code of the invoice address  # noqa: E501

        :param invoice_address_country_region_code: The invoice_address_country_region_code of this HotelsBody.  # noqa: E501
        :type: str
        """

        self._invoice_address_country_region_code = invoice_address_country_region_code

    @property
    def hotel_status(self):
        """Gets the hotel_status of this HotelsBody.  # noqa: E501

        The hotel status  # noqa: E501

        :return: The hotel_status of this HotelsBody.  # noqa: E501
        :rtype: str
        """
        return self._hotel_status

    @hotel_status.setter
    def hotel_status(self, hotel_status):
        """Sets the hotel_status of this HotelsBody.

        The hotel status  # noqa: E501

        :param hotel_status: The hotel_status of this HotelsBody.  # noqa: E501
        :type: str
        """

        self._hotel_status = hotel_status

    @property
    def invoice_address_email(self):
        """Gets the invoice_address_email of this HotelsBody.  # noqa: E501

        The email address of the invoice address  # noqa: E501

        :return: The invoice_address_email of this HotelsBody.  # noqa: E501
        :rtype: str
        """
        return self._invoice_address_email

    @invoice_address_email.setter
    def invoice_address_email(self, invoice_address_email):
        """Sets the invoice_address_email of this HotelsBody.

        The email address of the invoice address  # noqa: E501

        :param invoice_address_email: The invoice_address_email of this HotelsBody.  # noqa: E501
        :type: str
        """

        self._invoice_address_email = invoice_address_email

    @property
    def invoice_address_email_copy(self):
        """Gets the invoice_address_email_copy of this HotelsBody.  # noqa: E501

        The copy email address of the invoice address  # noqa: E501

        :return: The invoice_address_email_copy of this HotelsBody.  # noqa: E501
        :rtype: str
        """
        return self._invoice_address_email_copy

    @invoice_address_email_copy.setter
    def invoice_address_email_copy(self, invoice_address_email_copy):
        """Sets the invoice_address_email_copy of this HotelsBody.

        The copy email address of the invoice address  # noqa: E501

        :param invoice_address_email_copy: The invoice_address_email_copy of this HotelsBody.  # noqa: E501
        :type: str
        """

        self._invoice_address_email_copy = invoice_address_email_copy

    @property
    def invoice_address_fax_no(self):
        """Gets the invoice_address_fax_no of this HotelsBody.  # noqa: E501

        The fax number of the invoice address  # noqa: E501

        :return: The invoice_address_fax_no of this HotelsBody.  # noqa: E501
        :rtype: str
        """
        return self._invoice_address_fax_no

    @invoice_address_fax_no.setter
    def invoice_address_fax_no(self, invoice_address_fax_no):
        """Sets the invoice_address_fax_no of this HotelsBody.

        The fax number of the invoice address  # noqa: E501

        :param invoice_address_fax_no: The invoice_address_fax_no of this HotelsBody.  # noqa: E501
        :type: str
        """

        self._invoice_address_fax_no = invoice_address_fax_no

    @property
    def invoice_address_fax_no_copy(self):
        """Gets the invoice_address_fax_no_copy of this HotelsBody.  # noqa: E501

        The copy fax number of the invoice address  # noqa: E501

        :return: The invoice_address_fax_no_copy of this HotelsBody.  # noqa: E501
        :rtype: str
        """
        return self._invoice_address_fax_no_copy

    @invoice_address_fax_no_copy.setter
    def invoice_address_fax_no_copy(self, invoice_address_fax_no_copy):
        """Sets the invoice_address_fax_no_copy of this HotelsBody.

        The copy fax number of the invoice address  # noqa: E501

        :param invoice_address_fax_no_copy: The invoice_address_fax_no_copy of this HotelsBody.  # noqa: E501
        :type: str
        """

        self._invoice_address_fax_no_copy = invoice_address_fax_no_copy

    @property
    def invoice_address_language_code(self):
        """Gets the invoice_address_language_code of this HotelsBody.  # noqa: E501

        The language code of the invoice address  # noqa: E501

        :return: The invoice_address_language_code of this HotelsBody.  # noqa: E501
        :rtype: str
        """
        return self._invoice_address_language_code

    @invoice_address_language_code.setter
    def invoice_address_language_code(self, invoice_address_language_code):
        """Sets the invoice_address_language_code of this HotelsBody.

        The language code of the invoice address  # noqa: E501

        :param invoice_address_language_code: The invoice_address_language_code of this HotelsBody.  # noqa: E501
        :type: str
        """

        self._invoice_address_language_code = invoice_address_language_code

    @property
    def reason_code(self):
        """Gets the reason_code of this HotelsBody.  # noqa: E501

        The reason code  # noqa: E501

        :return: The reason_code of this HotelsBody.  # noqa: E501
        :rtype: str
        """
        return self._reason_code

    @reason_code.setter
    def reason_code(self, reason_code):
        """Sets the reason_code of this HotelsBody.

        The reason code  # noqa: E501

        :param reason_code: The reason_code of this HotelsBody.  # noqa: E501
        :type: str
        """

        self._reason_code = reason_code

    @property
    def no_sepa_core(self):
        """Gets the no_sepa_core of this HotelsBody.  # noqa: E501

        Indicates if SEPA_CORE is enabled or not  # noqa: E501

        :return: The no_sepa_core of this HotelsBody.  # noqa: E501
        :rtype: str
        """
        return self._no_sepa_core

    @no_sepa_core.setter
    def no_sepa_core(self, no_sepa_core):
        """Sets the no_sepa_core of this HotelsBody.

        Indicates if SEPA_CORE is enabled or not  # noqa: E501

        :param no_sepa_core: The no_sepa_core of this HotelsBody.  # noqa: E501
        :type: str
        """

        self._no_sepa_core = no_sepa_core

    @property
    def reason_name(self):
        """Gets the reason_name of this HotelsBody.  # noqa: E501

        The name of the reason  # noqa: E501

        :return: The reason_name of this HotelsBody.  # noqa: E501
        :rtype: str
        """
        return self._reason_name

    @reason_name.setter
    def reason_name(self, reason_name):
        """Sets the reason_name of this HotelsBody.

        The name of the reason  # noqa: E501

        :param reason_name: The reason_name of this HotelsBody.  # noqa: E501
        :type: str
        """

        self._reason_name = reason_name

    @property
    def reason_date(self):
        """Gets the reason_date of this HotelsBody.  # noqa: E501

        The date of the reason  # noqa: E501

        :return: The reason_date of this HotelsBody.  # noqa: E501
        :rtype: str
        """
        return self._reason_date

    @reason_date.setter
    def reason_date(self, reason_date):
        """Sets the reason_date of this HotelsBody.

        The date of the reason  # noqa: E501

        :param reason_date: The reason_date of this HotelsBody.  # noqa: E501
        :type: str
        """

        self._reason_date = reason_date

    @property
    def phone_no(self):
        """Gets the phone_no of this HotelsBody.  # noqa: E501

        The phone number of the invoice address  # noqa: E501

        :return: The phone_no of this HotelsBody.  # noqa: E501
        :rtype: str
        """
        return self._phone_no

    @phone_no.setter
    def phone_no(self, phone_no):
        """Sets the phone_no of this HotelsBody.

        The phone number of the invoice address  # noqa: E501

        :param phone_no: The phone_no of this HotelsBody.  # noqa: E501
        :type: str
        """

        self._phone_no = phone_no

    @property
    def hrs_contact(self):
        """Gets the hrs_contact of this HotelsBody.  # noqa: E501

        The HRS contact code  # noqa: E501

        :return: The hrs_contact of this HotelsBody.  # noqa: E501
        :rtype: str
        """
        return self._hrs_contact

    @hrs_contact.setter
    def hrs_contact(self, hrs_contact):
        """Sets the hrs_contact of this HotelsBody.

        The HRS contact code  # noqa: E501

        :param hrs_contact: The hrs_contact of this HotelsBody.  # noqa: E501
        :type: str
        """

        self._hrs_contact = hrs_contact

    @property
    def invoioce_address_zip(self):
        """Gets the invoioce_address_zip of this HotelsBody.  # noqa: E501

        The zip code of the invoice address  # noqa: E501

        :return: The invoioce_address_zip of this HotelsBody.  # noqa: E501
        :rtype: str
        """
        return self._invoioce_address_zip

    @invoioce_address_zip.setter
    def invoioce_address_zip(self, invoioce_address_zip):
        """Sets the invoioce_address_zip of this HotelsBody.

        The zip code of the invoice address  # noqa: E501

        :param invoioce_address_zip: The invoioce_address_zip of this HotelsBody.  # noqa: E501
        :type: str
        """

        self._invoioce_address_zip = invoioce_address_zip

    @property
    def ccpkn(self):
        """Gets the ccpkn of this HotelsBody.  # noqa: E501

        The CC PKN  # noqa: E501

        :return: The ccpkn of this HotelsBody.  # noqa: E501
        :rtype: str
        """
        return self._ccpkn

    @ccpkn.setter
    def ccpkn(self, ccpkn):
        """Sets the ccpkn of this HotelsBody.

        The CC PKN  # noqa: E501

        :param ccpkn: The ccpkn of this HotelsBody.  # noqa: E501
        :type: str
        """

        self._ccpkn = ccpkn

    @property
    def cc_name(self):
        """Gets the cc_name of this HotelsBody.  # noqa: E501

        The name of the credit card  # noqa: E501

        :return: The cc_name of this HotelsBody.  # noqa: E501
        :rtype: str
        """
        return self._cc_name

    @cc_name.setter
    def cc_name(self, cc_name):
        """Sets the cc_name of this HotelsBody.

        The name of the credit card  # noqa: E501

        :param cc_name: The cc_name of this HotelsBody.  # noqa: E501
        :type: str
        """

        self._cc_name = cc_name

    @property
    def cc_valid_to(self):
        """Gets the cc_valid_to of this HotelsBody.  # noqa: E501

        The valid-to date of the credit card  # noqa: E501

        :return: The cc_valid_to of this HotelsBody.  # noqa: E501
        :rtype: str
        """
        return self._cc_valid_to

    @cc_valid_to.setter
    def cc_valid_to(self, cc_valid_to):
        """Sets the cc_valid_to of this HotelsBody.

        The valid-to date of the credit card  # noqa: E501

        :param cc_valid_to: The cc_valid_to of this HotelsBody.  # noqa: E501
        :type: str
        """

        self._cc_valid_to = cc_valid_to

    @property
    def contact_person_first_name(self):
        """Gets the contact_person_first_name of this HotelsBody.  # noqa: E501

        The first name of the contact person  # noqa: E501

        :return: The contact_person_first_name of this HotelsBody.  # noqa: E501
        :rtype: str
        """
        return self._contact_person_first_name

    @contact_person_first_name.setter
    def contact_person_first_name(self, contact_person_first_name):
        """Sets the contact_person_first_name of this HotelsBody.

        The first name of the contact person  # noqa: E501

        :param contact_person_first_name: The contact_person_first_name of this HotelsBody.  # noqa: E501
        :type: str
        """

        self._contact_person_first_name = contact_person_first_name

    @property
    def contact_person_middle_name(self):
        """Gets the contact_person_middle_name of this HotelsBody.  # noqa: E501

        The middle name of the contact person  # noqa: E501

        :return: The contact_person_middle_name of this HotelsBody.  # noqa: E501
        :rtype: str
        """
        return self._contact_person_middle_name

    @contact_person_middle_name.setter
    def contact_person_middle_name(self, contact_person_middle_name):
        """Sets the contact_person_middle_name of this HotelsBody.

        The middle name of the contact person  # noqa: E501

        :param contact_person_middle_name: The contact_person_middle_name of this HotelsBody.  # noqa: E501
        :type: str
        """

        self._contact_person_middle_name = contact_person_middle_name

    @property
    def contact_person_last_name(self):
        """Gets the contact_person_last_name of this HotelsBody.  # noqa: E501

        The last name of the contact person  # noqa: E501

        :return: The contact_person_last_name of this HotelsBody.  # noqa: E501
        :rtype: str
        """
        return self._contact_person_last_name

    @contact_person_last_name.setter
    def contact_person_last_name(self, contact_person_last_name):
        """Sets the contact_person_last_name of this HotelsBody.

        The last name of the contact person  # noqa: E501

        :param contact_person_last_name: The contact_person_last_name of this HotelsBody.  # noqa: E501
        :type: str
        """

        self._contact_person_last_name = contact_person_last_name

    @property
    def contact_person_email(self):
        """Gets the contact_person_email of this HotelsBody.  # noqa: E501

        The email address of the contact person  # noqa: E501

        :return: The contact_person_email of this HotelsBody.  # noqa: E501
        :rtype: str
        """
        return self._contact_person_email

    @contact_person_email.setter
    def contact_person_email(self, contact_person_email):
        """Sets the contact_person_email of this HotelsBody.

        The email address of the contact person  # noqa: E501

        :param contact_person_email: The contact_person_email of this HotelsBody.  # noqa: E501
        :type: str
        """

        self._contact_person_email = contact_person_email

    @property
    def contact_person_phone(self):
        """Gets the contact_person_phone of this HotelsBody.  # noqa: E501

        The phone number of the contact person  # noqa: E501

        :return: The contact_person_phone of this HotelsBody.  # noqa: E501
        :rtype: str
        """
        return self._contact_person_phone

    @contact_person_phone.setter
    def contact_person_phone(self, contact_person_phone):
        """Sets the contact_person_phone of this HotelsBody.

        The phone number of the contact person  # noqa: E501

        :param contact_person_phone: The contact_person_phone of this HotelsBody.  # noqa: E501
        :type: str
        """

        self._contact_person_phone = contact_person_phone

    @property
    def contact_person_fax(self):
        """Gets the contact_person_fax of this HotelsBody.  # noqa: E501

        The fax number of the contact person  # noqa: E501

        :return: The contact_person_fax of this HotelsBody.  # noqa: E501
        :rtype: str
        """
        return self._contact_person_fax

    @contact_person_fax.setter
    def contact_person_fax(self, contact_person_fax):
        """Sets the contact_person_fax of this HotelsBody.

        The fax number of the contact person  # noqa: E501

        :param contact_person_fax: The contact_person_fax of this HotelsBody.  # noqa: E501
        :type: str
        """

        self._contact_person_fax = contact_person_fax

    @property
    def hotel_address_name(self):
        """Gets the hotel_address_name of this HotelsBody.  # noqa: E501

        The name of the hotel address  # noqa: E501

        :return: The hotel_address_name of this HotelsBody.  # noqa: E501
        :rtype: str
        """
        return self._hotel_address_name

    @hotel_address_name.setter
    def hotel_address_name(self, hotel_address_name):
        """Sets the hotel_address_name of this HotelsBody.

        The name of the hotel address  # noqa: E501

        :param hotel_address_name: The hotel_address_name of this HotelsBody.  # noqa: E501
        :type: str
        """

        self._hotel_address_name = hotel_address_name

    @property
    def hotel_address_country_region_code(self):
        """Gets the hotel_address_country_region_code of this HotelsBody.  # noqa: E501

        The country/region code of the hotel address  # noqa: E501

        :return: The hotel_address_country_region_code of this HotelsBody.  # noqa: E501
        :rtype: str
        """
        return self._hotel_address_country_region_code

    @hotel_address_country_region_code.setter
    def hotel_address_country_region_code(self, hotel_address_country_region_code):
        """Sets the hotel_address_country_region_code of this HotelsBody.

        The country/region code of the hotel address  # noqa: E501

        :param hotel_address_country_region_code: The hotel_address_country_region_code of this HotelsBody.  # noqa: E501
        :type: str
        """

        self._hotel_address_country_region_code = hotel_address_country_region_code

    @property
    def hotel_address_language_code(self):
        """Gets the hotel_address_language_code of this HotelsBody.  # noqa: E501

        The language code of the hotel address  # noqa: E501

        :return: The hotel_address_language_code of this HotelsBody.  # noqa: E501
        :rtype: str
        """
        return self._hotel_address_language_code

    @hotel_address_language_code.setter
    def hotel_address_language_code(self, hotel_address_language_code):
        """Sets the hotel_address_language_code of this HotelsBody.

        The language code of the hotel address  # noqa: E501

        :param hotel_address_language_code: The hotel_address_language_code of this HotelsBody.  # noqa: E501
        :type: str
        """

        self._hotel_address_language_code = hotel_address_language_code

    @property
    def hotel_address_name2(self):
        """Gets the hotel_address_name2 of this HotelsBody.  # noqa: E501

        The second line of the hotel address name  # noqa: E501

        :return: The hotel_address_name2 of this HotelsBody.  # noqa: E501
        :rtype: str
        """
        return self._hotel_address_name2

    @hotel_address_name2.setter
    def hotel_address_name2(self, hotel_address_name2):
        """Sets the hotel_address_name2 of this HotelsBody.

        The second line of the hotel address name  # noqa: E501

        :param hotel_address_name2: The hotel_address_name2 of this HotelsBody.  # noqa: E501
        :type: str
        """

        self._hotel_address_name2 = hotel_address_name2

    @property
    def hotel_address_line1(self):
        """Gets the hotel_address_line1 of this HotelsBody.  # noqa: E501

        The first line of the hotel address  # noqa: E501

        :return: The hotel_address_line1 of this HotelsBody.  # noqa: E501
        :rtype: str
        """
        return self._hotel_address_line1

    @hotel_address_line1.setter
    def hotel_address_line1(self, hotel_address_line1):
        """Sets the hotel_address_line1 of this HotelsBody.

        The first line of the hotel address  # noqa: E501

        :param hotel_address_line1: The hotel_address_line1 of this HotelsBody.  # noqa: E501
        :type: str
        """

        self._hotel_address_line1 = hotel_address_line1

    @property
    def hotel_address_line2(self):
        """Gets the hotel_address_line2 of this HotelsBody.  # noqa: E501

        The second line of the hotel address  # noqa: E501

        :return: The hotel_address_line2 of this HotelsBody.  # noqa: E501
        :rtype: str
        """
        return self._hotel_address_line2

    @hotel_address_line2.setter
    def hotel_address_line2(self, hotel_address_line2):
        """Sets the hotel_address_line2 of this HotelsBody.

        The second line of the hotel address  # noqa: E501

        :param hotel_address_line2: The hotel_address_line2 of this HotelsBody.  # noqa: E501
        :type: str
        """

        self._hotel_address_line2 = hotel_address_line2

    @property
    def hotel_address_city(self):
        """Gets the hotel_address_city of this HotelsBody.  # noqa: E501

        The city of the hotel address  # noqa: E501

        :return: The hotel_address_city of this HotelsBody.  # noqa: E501
        :rtype: str
        """
        return self._hotel_address_city

    @hotel_address_city.setter
    def hotel_address_city(self, hotel_address_city):
        """Sets the hotel_address_city of this HotelsBody.

        The city of the hotel address  # noqa: E501

        :param hotel_address_city: The hotel_address_city of this HotelsBody.  # noqa: E501
        :type: str
        """

        self._hotel_address_city = hotel_address_city

    @property
    def hotel_address_zip(self):
        """Gets the hotel_address_zip of this HotelsBody.  # noqa: E501

        The zip code of the hotel address  # noqa: E501

        :return: The hotel_address_zip of this HotelsBody.  # noqa: E501
        :rtype: str
        """
        return self._hotel_address_zip

    @hotel_address_zip.setter
    def hotel_address_zip(self, hotel_address_zip):
        """Sets the hotel_address_zip of this HotelsBody.

        The zip code of the hotel address  # noqa: E501

        :param hotel_address_zip: The hotel_address_zip of this HotelsBody.  # noqa: E501
        :type: str
        """

        self._hotel_address_zip = hotel_address_zip

    @property
    def hotel_address_phone_no(self):
        """Gets the hotel_address_phone_no of this HotelsBody.  # noqa: E501

        The phone number of the hotel address  # noqa: E501

        :return: The hotel_address_phone_no of this HotelsBody.  # noqa: E501
        :rtype: str
        """
        return self._hotel_address_phone_no

    @hotel_address_phone_no.setter
    def hotel_address_phone_no(self, hotel_address_phone_no):
        """Sets the hotel_address_phone_no of this HotelsBody.

        The phone number of the hotel address  # noqa: E501

        :param hotel_address_phone_no: The hotel_address_phone_no of this HotelsBody.  # noqa: E501
        :type: str
        """

        self._hotel_address_phone_no = hotel_address_phone_no

    @property
    def hotel_address_fax_no(self):
        """Gets the hotel_address_fax_no of this HotelsBody.  # noqa: E501

        The fax number of the hotel address  # noqa: E501

        :return: The hotel_address_fax_no of this HotelsBody.  # noqa: E501
        :rtype: str
        """
        return self._hotel_address_fax_no

    @hotel_address_fax_no.setter
    def hotel_address_fax_no(self, hotel_address_fax_no):
        """Sets the hotel_address_fax_no of this HotelsBody.

        The fax number of the hotel address  # noqa: E501

        :param hotel_address_fax_no: The hotel_address_fax_no of this HotelsBody.  # noqa: E501
        :type: str
        """

        self._hotel_address_fax_no = hotel_address_fax_no

    @property
    def hotel_address_email(self):
        """Gets the hotel_address_email of this HotelsBody.  # noqa: E501

        The email address of the hotel address  # noqa: E501

        :return: The hotel_address_email of this HotelsBody.  # noqa: E501
        :rtype: str
        """
        return self._hotel_address_email

    @hotel_address_email.setter
    def hotel_address_email(self, hotel_address_email):
        """Sets the hotel_address_email of this HotelsBody.

        The email address of the hotel address  # noqa: E501

        :param hotel_address_email: The hotel_address_email of this HotelsBody.  # noqa: E501
        :type: str
        """

        self._hotel_address_email = hotel_address_email

    @property
    def web_portal_enabled(self):
        """Gets the web_portal_enabled of this HotelsBody.  # noqa: E501

        Indicates if the web portal is enabled for the hotel  # noqa: E501

        :return: The web_portal_enabled of this HotelsBody.  # noqa: E501
        :rtype: bool
        """
        return self._web_portal_enabled

    @web_portal_enabled.setter
    def web_portal_enabled(self, web_portal_enabled):
        """Sets the web_portal_enabled of this HotelsBody.

        Indicates if the web portal is enabled for the hotel  # noqa: E501

        :param web_portal_enabled: The web_portal_enabled of this HotelsBody.  # noqa: E501
        :type: bool
        """

        self._web_portal_enabled = web_portal_enabled

    @property
    def correspondence_type(self):
        """Gets the correspondence_type of this HotelsBody.  # noqa: E501

        The correspondence type  # noqa: E501

        :return: The correspondence_type of this HotelsBody.  # noqa: E501
        :rtype: str
        """
        return self._correspondence_type

    @correspondence_type.setter
    def correspondence_type(self, correspondence_type):
        """Sets the correspondence_type of this HotelsBody.

        The correspondence type  # noqa: E501

        :param correspondence_type: The correspondence_type of this HotelsBody.  # noqa: E501
        :type: str
        """

        self._correspondence_type = correspondence_type

    @property
    def accounting_contact(self):
        """Gets the accounting_contact of this HotelsBody.  # noqa: E501

        The accounting contact  # noqa: E501

        :return: The accounting_contact of this HotelsBody.  # noqa: E501
        :rtype: str
        """
        return self._accounting_contact

    @accounting_contact.setter
    def accounting_contact(self, accounting_contact):
        """Sets the accounting_contact of this HotelsBody.

        The accounting contact  # noqa: E501

        :param accounting_contact: The accounting_contact of this HotelsBody.  # noqa: E501
        :type: str
        """

        self._accounting_contact = accounting_contact

    @property
    def deduction_type(self):
        """Gets the deduction_type of this HotelsBody.  # noqa: E501

        The deduction type  # noqa: E501

        :return: The deduction_type of this HotelsBody.  # noqa: E501
        :rtype: str
        """
        return self._deduction_type

    @deduction_type.setter
    def deduction_type(self, deduction_type):
        """Sets the deduction_type of this HotelsBody.

        The deduction type  # noqa: E501

        :param deduction_type: The deduction_type of this HotelsBody.  # noqa: E501
        :type: str
        """

        self._deduction_type = deduction_type

    @property
    def tenant(self):
        """Gets the tenant of this HotelsBody.  # noqa: E501

        The tenant name  # noqa: E501

        :return: The tenant of this HotelsBody.  # noqa: E501
        :rtype: str
        """
        return self._tenant

    @tenant.setter
    def tenant(self, tenant):
        """Sets the tenant of this HotelsBody.

        The tenant name  # noqa: E501

        :param tenant: The tenant of this HotelsBody.  # noqa: E501
        :type: str
        """

        self._tenant = tenant

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value
        if issubclass(HotelsBody, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, HotelsBody):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
